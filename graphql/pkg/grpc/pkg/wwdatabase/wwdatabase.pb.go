// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: pkg/wwdatabase/wwdatabase.proto

package wwdatabase_go_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewChampionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleHolder string                 `protobuf:"bytes,1,opt,name=title_holder,json=titleHolder,proto3" json:"title_holder,omitempty"`
	Show        string                 `protobuf:"bytes,2,opt,name=show,proto3" json:"show,omitempty"`
	DateWon     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_won,json=dateWon,proto3" json:"date_won,omitempty"`
}

func (x *NewChampionData) Reset() {
	*x = NewChampionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewChampionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewChampionData) ProtoMessage() {}

func (x *NewChampionData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewChampionData.ProtoReflect.Descriptor instead.
func (*NewChampionData) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{0}
}

func (x *NewChampionData) GetTitleHolder() string {
	if x != nil {
		return x.TitleHolder
	}
	return ""
}

func (x *NewChampionData) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *NewChampionData) GetDateWon() *timestamppb.Timestamp {
	if x != nil {
		return x.DateWon
	}
	return nil
}

type UpdateChampionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleHolderNumber      int32                  `protobuf:"varint,1,opt,name=title_holder_number,json=titleHolderNumber,proto3" json:"title_holder_number,omitempty"`
	TitleHolderOrderNumber int32                  `protobuf:"varint,2,opt,name=title_holder_order_number,json=titleHolderOrderNumber,proto3" json:"title_holder_order_number,omitempty"`
	CurrentChampion        bool                   `protobuf:"varint,3,opt,name=current_champion,json=currentChampion,proto3" json:"current_champion,omitempty"`
	DateLost               *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_lost,json=dateLost,proto3" json:"date_lost,omitempty"`
	PreviousChampion       string                 `protobuf:"bytes,5,opt,name=previous_champion,json=previousChampion,proto3" json:"previous_champion,omitempty"`
}

func (x *UpdateChampionData) Reset() {
	*x = UpdateChampionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChampionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChampionData) ProtoMessage() {}

func (x *UpdateChampionData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChampionData.ProtoReflect.Descriptor instead.
func (*UpdateChampionData) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateChampionData) GetTitleHolderNumber() int32 {
	if x != nil {
		return x.TitleHolderNumber
	}
	return 0
}

func (x *UpdateChampionData) GetTitleHolderOrderNumber() int32 {
	if x != nil {
		return x.TitleHolderOrderNumber
	}
	return 0
}

func (x *UpdateChampionData) GetCurrentChampion() bool {
	if x != nil {
		return x.CurrentChampion
	}
	return false
}

func (x *UpdateChampionData) GetDateLost() *timestamppb.Timestamp {
	if x != nil {
		return x.DateLost
	}
	return nil
}

func (x *UpdateChampionData) GetPreviousChampion() string {
	if x != nil {
		return x.PreviousChampion
	}
	return ""
}

type DeleteChampionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChampionRequest) Reset() {
	*x = DeleteChampionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChampionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChampionRequest) ProtoMessage() {}

func (x *DeleteChampionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChampionRequest.ProtoReflect.Descriptor instead.
func (*DeleteChampionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteChampionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteChampionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChampionResponse) Reset() {
	*x = DeleteChampionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChampionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChampionResponse) ProtoMessage() {}

func (x *DeleteChampionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChampionResponse.ProtoReflect.Descriptor instead.
func (*DeleteChampionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteChampionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ChampionNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleHolderOrderNumber int32 `protobuf:"varint,1,opt,name=title_holder_order_number,json=titleHolderOrderNumber,proto3" json:"title_holder_order_number,omitempty"`
}

func (x *ChampionNumber) Reset() {
	*x = ChampionNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionNumber) ProtoMessage() {}

func (x *ChampionNumber) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionNumber.ProtoReflect.Descriptor instead.
func (*ChampionNumber) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{4}
}

func (x *ChampionNumber) GetTitleHolderOrderNumber() int32 {
	if x != nil {
		return x.TitleHolderOrderNumber
	}
	return 0
}

type ChampionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Champion *Champion `protobuf:"bytes,1,opt,name=champion,proto3" json:"champion,omitempty"`
}

func (x *ChampionResponse) Reset() {
	*x = ChampionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionResponse) ProtoMessage() {}

func (x *ChampionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionResponse.ProtoReflect.Descriptor instead.
func (*ChampionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{5}
}

func (x *ChampionResponse) GetChampion() *Champion {
	if x != nil {
		return x.Champion
	}
	return nil
}

type GetChampionByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetChampionByNameRequest) Reset() {
	*x = GetChampionByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChampionByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionByNameRequest) ProtoMessage() {}

func (x *GetChampionByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionByNameRequest.ProtoReflect.Descriptor instead.
func (*GetChampionByNameRequest) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{6}
}

func (x *GetChampionByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetChampionByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetChampionByDateRequest) Reset() {
	*x = GetChampionByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChampionByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionByDateRequest) ProtoMessage() {}

func (x *GetChampionByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionByDateRequest.ProtoReflect.Descriptor instead.
func (*GetChampionByDateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{7}
}

func (x *GetChampionByDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type Champion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TitleHolder            string                 `protobuf:"bytes,2,opt,name=title_holder,json=titleHolder,proto3" json:"title_holder,omitempty"`
	TitleHolderNumber      int32                  `protobuf:"varint,3,opt,name=title_holder_number,json=titleHolderNumber,proto3" json:"title_holder_number,omitempty"`
	DateWon                *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_won,json=dateWon,proto3" json:"date_won,omitempty"`
	DateLost               *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_lost,json=dateLost,proto3" json:"date_lost,omitempty"`
	Show                   string                 `protobuf:"bytes,6,opt,name=show,proto3" json:"show,omitempty"`
	CurrentChampion        bool                   `protobuf:"varint,7,opt,name=current_champion,json=currentChampion,proto3" json:"current_champion,omitempty"`
	PreviousChampion       string                 `protobuf:"bytes,8,opt,name=previous_champion,json=previousChampion,proto3" json:"previous_champion,omitempty"`
	TitleHolderOrderNumber int32                  `protobuf:"varint,9,opt,name=title_holder_order_number,json=titleHolderOrderNumber,proto3" json:"title_holder_order_number,omitempty"`
}

func (x *Champion) Reset() {
	*x = Champion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Champion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Champion) ProtoMessage() {}

func (x *Champion) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Champion.ProtoReflect.Descriptor instead.
func (*Champion) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{8}
}

func (x *Champion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Champion) GetTitleHolder() string {
	if x != nil {
		return x.TitleHolder
	}
	return ""
}

func (x *Champion) GetTitleHolderNumber() int32 {
	if x != nil {
		return x.TitleHolderNumber
	}
	return 0
}

func (x *Champion) GetDateWon() *timestamppb.Timestamp {
	if x != nil {
		return x.DateWon
	}
	return nil
}

func (x *Champion) GetDateLost() *timestamppb.Timestamp {
	if x != nil {
		return x.DateLost
	}
	return nil
}

func (x *Champion) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *Champion) GetCurrentChampion() bool {
	if x != nil {
		return x.CurrentChampion
	}
	return false
}

func (x *Champion) GetPreviousChampion() string {
	if x != nil {
		return x.PreviousChampion
	}
	return ""
}

func (x *Champion) GetTitleHolderOrderNumber() int32 {
	if x != nil {
		return x.TitleHolderOrderNumber
	}
	return 0
}

type ChampionsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int32       `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Champions  []*Champion `protobuf:"bytes,2,rep,name=champions,proto3" json:"champions,omitempty"`
}

func (x *ChampionsList) Reset() {
	*x = ChampionsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionsList) ProtoMessage() {}

func (x *ChampionsList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionsList.ProtoReflect.Descriptor instead.
func (*ChampionsList) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{9}
}

func (x *ChampionsList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ChampionsList) GetChampions() []*Champion {
	if x != nil {
		return x.Champions
	}
	return nil
}

type GetCurrentChampionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentChampion bool `protobuf:"varint,1,opt,name=current_champion,json=currentChampion,proto3" json:"current_champion,omitempty"`
}

func (x *GetCurrentChampionRequest) Reset() {
	*x = GetCurrentChampionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentChampionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentChampionRequest) ProtoMessage() {}

func (x *GetCurrentChampionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentChampionRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentChampionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{10}
}

func (x *GetCurrentChampionRequest) GetCurrentChampion() bool {
	if x != nil {
		return x.CurrentChampion
	}
	return false
}

type GetChampionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip int32 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take int32 `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
}

func (x *GetChampionsRequest) Reset() {
	*x = GetChampionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChampionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionsRequest) ProtoMessage() {}

func (x *GetChampionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionsRequest.ProtoReflect.Descriptor instead.
func (*GetChampionsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{11}
}

func (x *GetChampionsRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *GetChampionsRequest) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

type CreateChampionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Champion *Champion `protobuf:"bytes,2,opt,name=champion,proto3" json:"champion,omitempty"`
}

func (x *CreateChampionPayload) Reset() {
	*x = CreateChampionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChampionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChampionPayload) ProtoMessage() {}

func (x *CreateChampionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChampionPayload.ProtoReflect.Descriptor instead.
func (*CreateChampionPayload) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{12}
}

func (x *CreateChampionPayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateChampionPayload) GetChampion() *Champion {
	if x != nil {
		return x.Champion
	}
	return nil
}

type UpdateChampionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Champion *Champion `protobuf:"bytes,2,opt,name=champion,proto3" json:"champion,omitempty"`
}

func (x *UpdateChampionPayload) Reset() {
	*x = UpdateChampionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChampionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChampionPayload) ProtoMessage() {}

func (x *UpdateChampionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_wwdatabase_wwdatabase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChampionPayload.ProtoReflect.Descriptor instead.
func (*UpdateChampionPayload) Descriptor() ([]byte, []int) {
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateChampionPayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateChampionPayload) GetChampion() *Champion {
	if x != nil {
		return x.Champion
	}
	return nil
}

var File_pkg_wwdatabase_wwdatabase_proto protoreflect.FileDescriptor

var file_pkg_wwdatabase_wwdatabase_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f,
	0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x77, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x6e, 0x22,
	0x90, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x19, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d,
	0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x19, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x44, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f,
	0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x19, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x64, 0x0a, 0x0d, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x46, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x63, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x32, 0xc5, 0x05, 0x0a, 0x0a, 0x57, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1f, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x77, 0x77, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e,
	0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x77, 0x77, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x77, 0x77,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x68,
	0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x21, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x77, 0x77, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x21, 0x2e, 0x77, 0x77, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x33, 0x72, 0x63, 0x61,
	0x72, 0x6c, 0x2f, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x67, 0x6f,
	0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3b, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x67, 0x6f, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_wwdatabase_wwdatabase_proto_rawDescOnce sync.Once
	file_pkg_wwdatabase_wwdatabase_proto_rawDescData = file_pkg_wwdatabase_wwdatabase_proto_rawDesc
)

func file_pkg_wwdatabase_wwdatabase_proto_rawDescGZIP() []byte {
	file_pkg_wwdatabase_wwdatabase_proto_rawDescOnce.Do(func() {
		file_pkg_wwdatabase_wwdatabase_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_wwdatabase_wwdatabase_proto_rawDescData)
	})
	return file_pkg_wwdatabase_wwdatabase_proto_rawDescData
}

var file_pkg_wwdatabase_wwdatabase_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pkg_wwdatabase_wwdatabase_proto_goTypes = []interface{}{
	(*NewChampionData)(nil),           // 0: wwdatabase.NewChampionData
	(*UpdateChampionData)(nil),        // 1: wwdatabase.UpdateChampionData
	(*DeleteChampionRequest)(nil),     // 2: wwdatabase.DeleteChampionRequest
	(*DeleteChampionResponse)(nil),    // 3: wwdatabase.DeleteChampionResponse
	(*ChampionNumber)(nil),            // 4: wwdatabase.ChampionNumber
	(*ChampionResponse)(nil),          // 5: wwdatabase.ChampionResponse
	(*GetChampionByNameRequest)(nil),  // 6: wwdatabase.GetChampionByNameRequest
	(*GetChampionByDateRequest)(nil),  // 7: wwdatabase.GetChampionByDateRequest
	(*Champion)(nil),                  // 8: wwdatabase.Champion
	(*ChampionsList)(nil),             // 9: wwdatabase.ChampionsList
	(*GetCurrentChampionRequest)(nil), // 10: wwdatabase.GetCurrentChampionRequest
	(*GetChampionsRequest)(nil),       // 11: wwdatabase.GetChampionsRequest
	(*CreateChampionPayload)(nil),     // 12: wwdatabase.CreateChampionPayload
	(*UpdateChampionPayload)(nil),     // 13: wwdatabase.UpdateChampionPayload
	(*timestamppb.Timestamp)(nil),     // 14: google.protobuf.Timestamp
}
var file_pkg_wwdatabase_wwdatabase_proto_depIdxs = []int32{
	14, // 0: wwdatabase.NewChampionData.date_won:type_name -> google.protobuf.Timestamp
	14, // 1: wwdatabase.UpdateChampionData.date_lost:type_name -> google.protobuf.Timestamp
	8,  // 2: wwdatabase.ChampionResponse.champion:type_name -> wwdatabase.Champion
	14, // 3: wwdatabase.GetChampionByDateRequest.date:type_name -> google.protobuf.Timestamp
	14, // 4: wwdatabase.Champion.date_won:type_name -> google.protobuf.Timestamp
	14, // 5: wwdatabase.Champion.date_lost:type_name -> google.protobuf.Timestamp
	8,  // 6: wwdatabase.ChampionsList.champions:type_name -> wwdatabase.Champion
	8,  // 7: wwdatabase.CreateChampionPayload.champion:type_name -> wwdatabase.Champion
	8,  // 8: wwdatabase.UpdateChampionPayload.champion:type_name -> wwdatabase.Champion
	11, // 9: wwdatabase.Wwdatabase.GetChampions:input_type -> wwdatabase.GetChampionsRequest
	6,  // 10: wwdatabase.Wwdatabase.GetChampionByName:input_type -> wwdatabase.GetChampionByNameRequest
	10, // 11: wwdatabase.Wwdatabase.GetCurrentChampion:input_type -> wwdatabase.GetCurrentChampionRequest
	7,  // 12: wwdatabase.Wwdatabase.GetChampionByDate:input_type -> wwdatabase.GetChampionByDateRequest
	4,  // 13: wwdatabase.Wwdatabase.GetChampionByOrderNumber:input_type -> wwdatabase.ChampionNumber
	0,  // 14: wwdatabase.Wwdatabase.AddChampion:input_type -> wwdatabase.NewChampionData
	1,  // 15: wwdatabase.Wwdatabase.UpdateChampion:input_type -> wwdatabase.UpdateChampionData
	2,  // 16: wwdatabase.Wwdatabase.DeleteChampion:input_type -> wwdatabase.DeleteChampionRequest
	9,  // 17: wwdatabase.Wwdatabase.GetChampions:output_type -> wwdatabase.ChampionsList
	9,  // 18: wwdatabase.Wwdatabase.GetChampionByName:output_type -> wwdatabase.ChampionsList
	5,  // 19: wwdatabase.Wwdatabase.GetCurrentChampion:output_type -> wwdatabase.ChampionResponse
	5,  // 20: wwdatabase.Wwdatabase.GetChampionByDate:output_type -> wwdatabase.ChampionResponse
	5,  // 21: wwdatabase.Wwdatabase.GetChampionByOrderNumber:output_type -> wwdatabase.ChampionResponse
	12, // 22: wwdatabase.Wwdatabase.AddChampion:output_type -> wwdatabase.CreateChampionPayload
	13, // 23: wwdatabase.Wwdatabase.UpdateChampion:output_type -> wwdatabase.UpdateChampionPayload
	3,  // 24: wwdatabase.Wwdatabase.DeleteChampion:output_type -> wwdatabase.DeleteChampionResponse
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pkg_wwdatabase_wwdatabase_proto_init() }
func file_pkg_wwdatabase_wwdatabase_proto_init() {
	if File_pkg_wwdatabase_wwdatabase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewChampionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChampionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChampionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChampionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChampionByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChampionByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Champion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentChampionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChampionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChampionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_wwdatabase_wwdatabase_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChampionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_wwdatabase_wwdatabase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_wwdatabase_wwdatabase_proto_goTypes,
		DependencyIndexes: file_pkg_wwdatabase_wwdatabase_proto_depIdxs,
		MessageInfos:      file_pkg_wwdatabase_wwdatabase_proto_msgTypes,
	}.Build()
	File_pkg_wwdatabase_wwdatabase_proto = out.File
	file_pkg_wwdatabase_wwdatabase_proto_rawDesc = nil
	file_pkg_wwdatabase_wwdatabase_proto_goTypes = nil
	file_pkg_wwdatabase_wwdatabase_proto_depIdxs = nil
}
