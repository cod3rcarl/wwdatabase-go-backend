// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: wwdatabase/wwdatabase.proto

package wwdatabase_go_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewChampionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleHolder string                 `protobuf:"bytes,1,opt,name=title_holder,json=titleHolder,proto3" json:"title_holder,omitempty"`
	Show        string                 `protobuf:"bytes,2,opt,name=show,proto3" json:"show,omitempty"`
	DateWon     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_won,json=dateWon,proto3" json:"date_won,omitempty"`
}

func (x *NewChampionData) Reset() {
	*x = NewChampionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewChampionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewChampionData) ProtoMessage() {}

func (x *NewChampionData) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewChampionData.ProtoReflect.Descriptor instead.
func (*NewChampionData) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{0}
}

func (x *NewChampionData) GetTitleHolder() string {
	if x != nil {
		return x.TitleHolder
	}
	return ""
}

func (x *NewChampionData) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *NewChampionData) GetDateWon() *timestamppb.Timestamp {
	if x != nil {
		return x.DateWon
	}
	return nil
}

type Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Name) Reset() {
	*x = Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{1}
}

func (x *Name) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{2}
}

func (x *Date) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type Champion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleHolder       string                 `protobuf:"bytes,1,opt,name=title_holder,json=titleHolder,proto3" json:"title_holder,omitempty"`
	TitleHolderNumber *int32                 `protobuf:"varint,2,opt,name=title_holder_number,json=titleHolderNumber,proto3,oneof" json:"title_holder_number,omitempty"`
	DateWon           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_won,json=dateWon,proto3" json:"date_won,omitempty"`
	DateLost          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_lost,json=dateLost,proto3,oneof" json:"date_lost,omitempty"`
	Show              string                 `protobuf:"bytes,5,opt,name=show,proto3" json:"show,omitempty"`
	NumberOfReigns    *int32                 `protobuf:"varint,6,opt,name=number_of_reigns,json=numberOfReigns,proto3,oneof" json:"number_of_reigns,omitempty"`
	DaysAsChampion    *int32                 `protobuf:"varint,7,opt,name=days_as_champion,json=daysAsChampion,proto3,oneof" json:"days_as_champion,omitempty"`
	PreviousChampion  *string                `protobuf:"bytes,8,opt,name=previous_champion,json=previousChampion,proto3,oneof" json:"previous_champion,omitempty"`
	CurrentChampion   *bool                  `protobuf:"varint,9,opt,name=current_champion,json=currentChampion,proto3,oneof" json:"current_champion,omitempty"`
}

func (x *Champion) Reset() {
	*x = Champion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Champion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Champion) ProtoMessage() {}

func (x *Champion) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Champion.ProtoReflect.Descriptor instead.
func (*Champion) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{3}
}

func (x *Champion) GetTitleHolder() string {
	if x != nil {
		return x.TitleHolder
	}
	return ""
}

func (x *Champion) GetTitleHolderNumber() int32 {
	if x != nil && x.TitleHolderNumber != nil {
		return *x.TitleHolderNumber
	}
	return 0
}

func (x *Champion) GetDateWon() *timestamppb.Timestamp {
	if x != nil {
		return x.DateWon
	}
	return nil
}

func (x *Champion) GetDateLost() *timestamppb.Timestamp {
	if x != nil {
		return x.DateLost
	}
	return nil
}

func (x *Champion) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *Champion) GetNumberOfReigns() int32 {
	if x != nil && x.NumberOfReigns != nil {
		return *x.NumberOfReigns
	}
	return 0
}

func (x *Champion) GetDaysAsChampion() int32 {
	if x != nil && x.DaysAsChampion != nil {
		return *x.DaysAsChampion
	}
	return 0
}

func (x *Champion) GetPreviousChampion() string {
	if x != nil && x.PreviousChampion != nil {
		return *x.PreviousChampion
	}
	return ""
}

func (x *Champion) GetCurrentChampion() bool {
	if x != nil && x.CurrentChampion != nil {
		return *x.CurrentChampion
	}
	return false
}

type ChampionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int32       `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Champions  []*Champion `protobuf:"bytes,2,rep,name=champions,proto3" json:"champions,omitempty"`
}

func (x *ChampionList) Reset() {
	*x = ChampionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionList) ProtoMessage() {}

func (x *ChampionList) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionList.ProtoReflect.Descriptor instead.
func (*ChampionList) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{4}
}

func (x *ChampionList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ChampionList) GetChampions() []*Champion {
	if x != nil {
		return x.Champions
	}
	return nil
}

type GetChampionsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetChampionsParams) Reset() {
	*x = GetChampionsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChampionsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionsParams) ProtoMessage() {}

func (x *GetChampionsParams) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionsParams.ProtoReflect.Descriptor instead.
func (*GetChampionsParams) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{5}
}

type GetCurrentChampionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentChampion bool `protobuf:"varint,1,opt,name=current_champion,json=currentChampion,proto3" json:"current_champion,omitempty"`
}

func (x *GetCurrentChampionParams) Reset() {
	*x = GetCurrentChampionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentChampionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentChampionParams) ProtoMessage() {}

func (x *GetCurrentChampionParams) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentChampionParams.ProtoReflect.Descriptor instead.
func (*GetCurrentChampionParams) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{6}
}

func (x *GetCurrentChampionParams) GetCurrentChampion() bool {
	if x != nil {
		return x.CurrentChampion
	}
	return false
}

type CreateChampionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Champion *Champion `protobuf:"bytes,2,opt,name=champion,proto3" json:"champion,omitempty"`
}

func (x *CreateChampionPayload) Reset() {
	*x = CreateChampionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wwdatabase_wwdatabase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChampionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChampionPayload) ProtoMessage() {}

func (x *CreateChampionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_wwdatabase_wwdatabase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChampionPayload.ProtoReflect.Descriptor instead.
func (*CreateChampionPayload) Descriptor() ([]byte, []int) {
	return file_wwdatabase_wwdatabase_proto_rawDescGZIP(), []int{7}
}

func (x *CreateChampionPayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateChampionPayload) GetChampion() *Champion {
	if x != nil {
		return x.Champion
	}
	return nil
}

var File_wwdatabase_wwdatabase_proto protoreflect.FileDescriptor

var file_wwdatabase_wwdatabase_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x77, 0x77, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x77,
	0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x0f, 0x4e, 0x65,
	0x77, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x68, 0x6f, 0x77, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22,
	0xa6, 0x04, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x13, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x11,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x2d, 0x0a,
	0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x52, 0x65, 0x69, 0x67, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10,
	0x64, 0x61, 0x79, 0x73, 0x5f, 0x61, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0e, 0x64, 0x61, 0x79, 0x73, 0x41, 0x73,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c,
	0x6f, 0x73, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x64, 0x61, 0x79,
	0x73, 0x5f, 0x61, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6d,
	0x70, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77,
	0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x32,
	0x81, 0x03, 0x0a, 0x0a, 0x57, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x14, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x14, 0x2e, 0x77, 0x77, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x14, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x18, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4e,
	0x65, 0x77, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x21,
	0x2e, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x33, 0x72, 0x63, 0x61, 0x72, 0x6c, 0x2f, 0x77, 0x77, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x67, 0x6f, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x3b, 0x77, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x6f, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wwdatabase_wwdatabase_proto_rawDescOnce sync.Once
	file_wwdatabase_wwdatabase_proto_rawDescData = file_wwdatabase_wwdatabase_proto_rawDesc
)

func file_wwdatabase_wwdatabase_proto_rawDescGZIP() []byte {
	file_wwdatabase_wwdatabase_proto_rawDescOnce.Do(func() {
		file_wwdatabase_wwdatabase_proto_rawDescData = protoimpl.X.CompressGZIP(file_wwdatabase_wwdatabase_proto_rawDescData)
	})
	return file_wwdatabase_wwdatabase_proto_rawDescData
}

var file_wwdatabase_wwdatabase_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_wwdatabase_wwdatabase_proto_goTypes = []interface{}{
	(*NewChampionData)(nil),          // 0: wwdatabase.NewChampionData
	(*Name)(nil),                     // 1: wwdatabase.Name
	(*Date)(nil),                     // 2: wwdatabase.Date
	(*Champion)(nil),                 // 3: wwdatabase.Champion
	(*ChampionList)(nil),             // 4: wwdatabase.ChampionList
	(*GetChampionsParams)(nil),       // 5: wwdatabase.GetChampionsParams
	(*GetCurrentChampionParams)(nil), // 6: wwdatabase.GetCurrentChampionParams
	(*CreateChampionPayload)(nil),    // 7: wwdatabase.CreateChampionPayload
	(*timestamppb.Timestamp)(nil),    // 8: google.protobuf.Timestamp
}
var file_wwdatabase_wwdatabase_proto_depIdxs = []int32{
	8,  // 0: wwdatabase.NewChampionData.date_won:type_name -> google.protobuf.Timestamp
	8,  // 1: wwdatabase.Date.date:type_name -> google.protobuf.Timestamp
	8,  // 2: wwdatabase.Champion.date_won:type_name -> google.protobuf.Timestamp
	8,  // 3: wwdatabase.Champion.date_lost:type_name -> google.protobuf.Timestamp
	3,  // 4: wwdatabase.ChampionList.champions:type_name -> wwdatabase.Champion
	3,  // 5: wwdatabase.CreateChampionPayload.champion:type_name -> wwdatabase.Champion
	1,  // 6: wwdatabase.Wwdatabase.GetChampionByName:input_type -> wwdatabase.Name
	6,  // 7: wwdatabase.Wwdatabase.GetCurrentChampion:input_type -> wwdatabase.GetCurrentChampionParams
	2,  // 8: wwdatabase.Wwdatabase.GetChampionByDate:input_type -> wwdatabase.Date
	5,  // 9: wwdatabase.Wwdatabase.GetAllChampions:input_type -> wwdatabase.GetChampionsParams
	0,  // 10: wwdatabase.Wwdatabase.CreateChampion:input_type -> wwdatabase.NewChampionData
	3,  // 11: wwdatabase.Wwdatabase.GetChampionByName:output_type -> wwdatabase.Champion
	3,  // 12: wwdatabase.Wwdatabase.GetCurrentChampion:output_type -> wwdatabase.Champion
	3,  // 13: wwdatabase.Wwdatabase.GetChampionByDate:output_type -> wwdatabase.Champion
	4,  // 14: wwdatabase.Wwdatabase.GetAllChampions:output_type -> wwdatabase.ChampionList
	7,  // 15: wwdatabase.Wwdatabase.CreateChampion:output_type -> wwdatabase.CreateChampionPayload
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_wwdatabase_wwdatabase_proto_init() }
func file_wwdatabase_wwdatabase_proto_init() {
	if File_wwdatabase_wwdatabase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wwdatabase_wwdatabase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewChampionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwdatabase_wwdatabase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwdatabase_wwdatabase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwdatabase_wwdatabase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Champion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwdatabase_wwdatabase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwdatabase_wwdatabase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChampionsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwdatabase_wwdatabase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentChampionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wwdatabase_wwdatabase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChampionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_wwdatabase_wwdatabase_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wwdatabase_wwdatabase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wwdatabase_wwdatabase_proto_goTypes,
		DependencyIndexes: file_wwdatabase_wwdatabase_proto_depIdxs,
		MessageInfos:      file_wwdatabase_wwdatabase_proto_msgTypes,
	}.Build()
	File_wwdatabase_wwdatabase_proto = out.File
	file_wwdatabase_wwdatabase_proto_rawDesc = nil
	file_wwdatabase_wwdatabase_proto_goTypes = nil
	file_wwdatabase_wwdatabase_proto_depIdxs = nil
}
